<?xml version="1.0" encoding="UTF-8"?>

<Module>
<ModulePrefs title="Ambient Barometric Pressure" />
<Content type="html">
<![CDATA[
         <html>
         <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
         <head>
         
         <title>Google Gauge - ThingSpeak</title>
         
         <style type="text/css">
         body { background-color: #E9ECCF; }
#container { height: 100%; width: 50%; display: table; }
#inner { vertical-align: left; display: table-cell; }
#gauge_div { width: 120px; margin: 0 auto; }
         </style>
         
         <script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'></script>
         <script type='text/javascript' src='https://www.google.com/jsapi'></script>
         <script type='text/javascript'>
         
         // set your channel id here
         var channel_id = XXXXX;
         // set your channel's read api key here if necessary
         var api_key = 'XXXXXXXXXXXXXXXX';
         // maximum value for the gauge
         var max_gauge_value = 35;
         //var min_guage_value = 25;
         // name of the gauge
         var gauge_name = 'in. Hg.';
         
         // global variables
         var chart, charts, data;
         
         // load the google gauge visualization
         google.load('visualization', '1', {packages:['gauge']});
         google.setOnLoadCallback(initChart);
         
         // display the data
         function displayData(point) {
         data.setValue(0, 0, gauge_name);
         data.setValue(0, 1, point);
         chart.draw(data, options);
         }
         
         // load the data
         function loadData() {
         // variable for the data point
         var p;
         
         // get the data from thingspeak
         $.getJSON('https://api.thingspeak.com/channels/' + channel_id + '/feed/last.json?api_key=' + api_key, function(data) {
    
    // get the data point
    p = data.field7;
    
    // if there is a data point display it
    //if (p) {
    //p = Math.round((p / max_gauge_value) * 100);
    displayData(p);
    //}
    
});
         }
         
         // initialize the chart
         function initChart() {
         
         data = new google.visualization.DataTable();
         data.addColumn('string', 'Label');
         data.addColumn('number', 'Value');
         data.addRows(1);
         
         chart = new google.visualization.Gauge(document.getElementById('gauge_div'));
         
         options = {width: 400, height: 400, min: 28, max: 31, yellowFrom: 29, yellowTo: 30,
         redFrom: 28, redTo: 29, greenFrom: 30, greenTo: 31, majorTicks: ['28','28.5','29','29.5','30', '30.5', '31'], minorTicks: 10
         };
         
         loadData();
         
         // load new data every 30 seconds
         setInterval('loadData()', 30000);
         }
         
         </script>
         
         </head>
         
         <body>
         <div id="container">
         <div id="inner">
         <div id="gauge_div"></div>
         </div>
         </div>
         </body>
         </html>
         
         
         
         <!-- ===================== End HTML Section ===================== -->  
         ]]>
</Content>
</Module>